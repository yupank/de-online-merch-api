openapi: 3.0.0
info:
  title: "NC Tech Test REST API"
  description: "REST API with some extremely useless endpoints"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - title
        - description
        - cost 
        - category
      properties:
        id:
          type: integer
        title:
          type: string
        description: 
          type: string
        cost: 
          type: number
        category: 
          type: string
    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
  parameters:
    UserParam:
      in: path 
      name: user_id
      required: true
      schema: 
        type: integer
        minimum: 1
      description: "The User Id"
    ProductParam:
      in: path 
      name: product_id
      required: true
      schema: 
        type: integer
        minimum: 1
      description: "The Product Id"
    CatergoryParam:
      in: path
      name: category_name
      required: True
      schema:
        type: string
      description: "Category name"
    DateFromParam:
      in: query 
      name: date_from
      required: true
      schema:
        type: string
        format: date
      description: "The earliest date, in the format YYYY-MM-DD"
    DateToParam:
      in: query 
      name: date_to
      required: true
      schema:
        type: string
        format: date
      description: "The latest date, in the format YYYY-MM-DD"


paths:
  /categories:
    get:
      operationId: "routes.get_categories"
      tags:
        - "Categories"
      summary: "Get the list of all product Categories"
      responses:
        "200":
          description: "Successfully read Categories"
    post:
      operationId: "routes.create_category"
      tags:
        - "Categories"
      summary: "Create a new product category"
      requestBody:
        description: "Category to create"
        required: true
        content:
          application/json:
            schema:
              x-body-name: "category"
              $ref: "#/components/schemas/Category"
      responses:
        "201":
          description: "Successfully created category"
  /products:
    get:
      operationId: "routes.get_products"
      tags:
        - "Products"
      summary: "Get the list of all Products"
      responses:
        "200":
          description: "Successfully read Products"
  /products/{product_id}: 
    get:
      parameters:
        - $ref: '#/components/parameters/ProductParam'
      operationId: "routes.get_product"
      tags:
        - "Product"
      summary: "Get details of single product"
      responses:
        "200":
          description: "Successfully read Product details"
  /users:
    get: 
      operationId: "routes.get_users"
      tags:
        - "Users"
      summary: "Get details of all Users"
      responses:
        "200":
          description: "Successfully read Users"
  /users/{user_id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserParam'
      operationId: "routes.get_user_by_id"
      tags:
        - "User"
      summary: "Get details of single user"
      responses:
        "200":
          description: "Successfully read User details"
  /users/{user_id}/sales/latest:
    get:
      parameters:
        - $ref: '#/components/parameters/UserParam'
      operationId: "routes.get_user_sales_latest"
      tags:
        - "User Latest"
      summary: "Returns user's latest sales (up to five)"
      responses:
        "200":
          description: "Successfully returned User's latest sales"
  /users/{user_id}/sales:
    get:
      parameters:
        - $ref: '#/components/parameters/UserParam'
        - $ref: '#/components/parameters/DateFromParam'
        - $ref: '#/components/parameters/DateToParam'
      operationId: "routes.get_user_sales"
      tags:
        - "User Sales"
      summary: "Returns user's sales between specified dates"
      responses:
        "200":
          description: "Successfully returned user sales records"
  /users/{user_id}/average_spend:
    get:
      parameters:
        - $ref: '#/components/parameters/UserParam'
      operationId: "routes.get_user_average_spend"
      tags:
        - "User Average"
      summary: "Computes and returns User's average spend"
      responses:
        "200":
          description: "Successfully returned User average spend"